[package]
name = "qdrant"
version = "0.11.1"
authors = [
    "Andrey Vasnetsov <andrey@vasnetsov.com>",
    "Qdrant Team <info@qdrant.tech>",
]
readme = "README.md"
homepage = "https://qdrant.tech/"
repository = "https://github.com/qdrant/qdrant"
license = "Apache-2.0"
edition = "2021"
rust-version = "1.75"
default-run = "qdrant"

[features]
default = ["web", "parking_lot"]
web = ["actix-web"]
multiling-chinese = ["segment/multiling-chinese"]
multiling-japanese = ["segment/multiling-japanese"]
multiling-korean = ["segment/multiling-korean"]
service_debug = ["parking_lot", "parking_lot/deadlock_detection"]
tracing = [
    "api/tracing",
    "collection/tracing",
    "segment/tracing",
    "storage/tracing",
]
console = ["console-subscriber"]
console-subscriber = ["tracing", "dep:console-subscriber"]
tracy = ["tracing-tracy"]
tracing-tracy = ["tracing", "dep:tracing-tracy"]
tokio-tracing = ["tokio/tracing"]
stacktrace = ["rstack-self"]

[dev-dependencies]
rusty-hook = "^0.11.2"
sealed_test = "1.0.0"
serde_urlencoded = "0.7"
tempfile = "3.9.0"

[dependencies]
actix-cors = "0.7.0"
actix-files = "0.6.5"
actix-multipart = "0.6.1"
actix-web = { version = "4.4.1", optional = true, features = [
    "rustls-0_21",
    "actix-tls",
] }
actix-web-httpauth = "0.8.1"
actix-web-validator = "5.0.1"
anyhow = "1.0.79"
chrono = { version = "~0.4", features = ["serde"] }
clap = { version = "4.4.18", features = ["derive"] }
colored = "2"
config = "~0.13.4"
console-subscriber = { version = "0.1", default-features = false, features = [
    "parking_lot",
], optional = true }
constant_time_eq = "0.3.0"
futures = "0.3.30"
futures-util = "0.3.30"
itertools = "0.12"
log = "0.4"
parking_lot = { version = "0.12.1", features = [
    "deadlock_detection",
], optional = true }
prometheus = { version = "0.13.3", default-features = false }
prost = "0.11.9"
rand = "0.8.5"
reqwest = { version = "0.11", default-features = false, features = [
    "stream",
    "rustls-tls",
    "blocking",
] }
rustls = "0.21.10"
rustls-pemfile = "2.0.0"
schemars = { version = "0.8.16", features = [
    "uuid1",
    "preserve_order",
    "chrono",
] }
serde = { version = "~1.0", features = ["derive"] }
serde_cbor = { version = "0.11.2" }
serde_json = "~1.0"
sys-info = "0.9.1"
tar = "0.4.40"
thiserror = "1.0"
tokio = { version = "~1.35", features = ["full"] }
tonic = { version = "0.9.2", features = ["gzip", "tls"] }
tonic-reflection = "0.9.2"
tower = "0.4.13"
tower-layer = "0.3.2"
uuid = { version = "1.7", features = ["v4", "serde"] }
validator = { version = "0.16", features = ["derive"] }
wal = { git = "https://github.com/qdrant/wal.git", rev = "fad0e7c48be58d8e7db4cc739acd9b1cf6735de0" }

# Consensus related crates
raft = { version = "0.7.0", features = [
    "prost-codec",
], default-features = false }
raft-proto = { version = "0.7.0", features = [
    "prost-codec",
], default-features = false }
slog = { version = "2.7.0", features = [
    "max_level_trace",
    "release_max_level_debug",
] }
slog-stdlog = "4.1.1"

api = { path = "lib/api" }
cancel = { path = "lib/common/cancel" }
collection = { path = "lib/collection" }
common = { path = "lib/common/common" }
memory = { path = "lib/common/memory" }
segment = { path = "lib/segment" }
storage = { path = "lib/storage" }

# Profiling
tracing = { version = "0.1", features = ["async-await"] }
tracing-log = { version = "0.2", default-features = false, features = [
    "log-tracer",
    "std",
] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-tracy = { version = "0.10.5", features = ["ondemand"], optional = true }

# Backtrace
[target.'cfg(target_os = "linux")'.dependencies]
rstack-self = { version = "0.3.0", optional = true }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = "0.5"

[[bin]]
name = "schema_generator"
path = "src/schema_generator.rs"
test = false
bench = false

[[bin]]
name = "wal_inspector"
path = "src/wal_inspector.rs"
test = false
bench = false

[workspace]
members = [
    "lib/api",
    "lib/collection",
    "lib/common/*",
    "lib/segment",
    "lib/sparse",
    "lib/storage",
]
exclude = ["benches/search-points"]

[profile.release]
lto = "fat"

# Inherit from release, because we are not rebuilding often,
# and we don't want the huge binary sizes from debug builds.
[profile.ci]
inherits = "release"
lto = false
opt-level = 0

# Inherits by default from release
[profile.bench]
lto = false
debug = true

# Profile for performance testing, which is faster to build than release.
[profile.perf]
inherits = "release"
lto = false
opt-level = 3

[patch.crates-io]
# Temporary patch until <https://github.com/hyperium/tonic/pull/1401> is merged
tonic = { git = 'https://github.com/qdrant/tonic', branch = "v0.9.2-patched" }

[package.metadata.cargo-machete]
ignored = ["sparse"]
