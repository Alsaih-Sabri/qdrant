// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.15.8
// source: points_internal_service.proto

package go_client

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PointsInternalClient is the client API for PointsInternal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PointsInternalClient interface {
	Upsert(ctx context.Context, in *UpsertPointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error)
	Delete(ctx context.Context, in *DeletePointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error)
	SetPayload(ctx context.Context, in *SetPayloadPointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error)
	DeletePayload(ctx context.Context, in *DeletePayloadPointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error)
	ClearPayload(ctx context.Context, in *ClearPayloadPointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error)
	CreateFieldIndex(ctx context.Context, in *CreateFieldIndexCollectionInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error)
	DeleteFieldIndex(ctx context.Context, in *DeleteFieldIndexCollectionInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error)
	Search(ctx context.Context, in *SearchPointsInternal, opts ...grpc.CallOption) (*SearchResponse, error)
	Scroll(ctx context.Context, in *ScrollPointsInternal, opts ...grpc.CallOption) (*ScrollResponse, error)
	Recommend(ctx context.Context, in *RecommendPointsInternal, opts ...grpc.CallOption) (*RecommendResponse, error)
	Get(ctx context.Context, in *GetPointsInternal, opts ...grpc.CallOption) (*GetResponse, error)
}

type pointsInternalClient struct {
	cc grpc.ClientConnInterface
}

func NewPointsInternalClient(cc grpc.ClientConnInterface) PointsInternalClient {
	return &pointsInternalClient{cc}
}

func (c *pointsInternalClient) Upsert(ctx context.Context, in *UpsertPointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error) {
	out := new(PointsOperationResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/Upsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) Delete(ctx context.Context, in *DeletePointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error) {
	out := new(PointsOperationResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) SetPayload(ctx context.Context, in *SetPayloadPointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error) {
	out := new(PointsOperationResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/SetPayload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) DeletePayload(ctx context.Context, in *DeletePayloadPointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error) {
	out := new(PointsOperationResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/DeletePayload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) ClearPayload(ctx context.Context, in *ClearPayloadPointsInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error) {
	out := new(PointsOperationResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/ClearPayload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) CreateFieldIndex(ctx context.Context, in *CreateFieldIndexCollectionInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error) {
	out := new(PointsOperationResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/CreateFieldIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) DeleteFieldIndex(ctx context.Context, in *DeleteFieldIndexCollectionInternal, opts ...grpc.CallOption) (*PointsOperationResponse, error) {
	out := new(PointsOperationResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/DeleteFieldIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) Search(ctx context.Context, in *SearchPointsInternal, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) Scroll(ctx context.Context, in *ScrollPointsInternal, opts ...grpc.CallOption) (*ScrollResponse, error) {
	out := new(ScrollResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/Scroll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) Recommend(ctx context.Context, in *RecommendPointsInternal, opts ...grpc.CallOption) (*RecommendResponse, error) {
	out := new(RecommendResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/Recommend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pointsInternalClient) Get(ctx context.Context, in *GetPointsInternal, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/qdrant.PointsInternal/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PointsInternalServer is the server API for PointsInternal service.
// All implementations must embed UnimplementedPointsInternalServer
// for forward compatibility
type PointsInternalServer interface {
	Upsert(context.Context, *UpsertPointsInternal) (*PointsOperationResponse, error)
	Delete(context.Context, *DeletePointsInternal) (*PointsOperationResponse, error)
	SetPayload(context.Context, *SetPayloadPointsInternal) (*PointsOperationResponse, error)
	DeletePayload(context.Context, *DeletePayloadPointsInternal) (*PointsOperationResponse, error)
	ClearPayload(context.Context, *ClearPayloadPointsInternal) (*PointsOperationResponse, error)
	CreateFieldIndex(context.Context, *CreateFieldIndexCollectionInternal) (*PointsOperationResponse, error)
	DeleteFieldIndex(context.Context, *DeleteFieldIndexCollectionInternal) (*PointsOperationResponse, error)
	Search(context.Context, *SearchPointsInternal) (*SearchResponse, error)
	Scroll(context.Context, *ScrollPointsInternal) (*ScrollResponse, error)
	Recommend(context.Context, *RecommendPointsInternal) (*RecommendResponse, error)
	Get(context.Context, *GetPointsInternal) (*GetResponse, error)
	mustEmbedUnimplementedPointsInternalServer()
}

// UnimplementedPointsInternalServer must be embedded to have forward compatible implementations.
type UnimplementedPointsInternalServer struct {
}

func (UnimplementedPointsInternalServer) Upsert(context.Context, *UpsertPointsInternal) (*PointsOperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Upsert not implemented")
}
func (UnimplementedPointsInternalServer) Delete(context.Context, *DeletePointsInternal) (*PointsOperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (UnimplementedPointsInternalServer) SetPayload(context.Context, *SetPayloadPointsInternal) (*PointsOperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPayload not implemented")
}
func (UnimplementedPointsInternalServer) DeletePayload(context.Context, *DeletePayloadPointsInternal) (*PointsOperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePayload not implemented")
}
func (UnimplementedPointsInternalServer) ClearPayload(context.Context, *ClearPayloadPointsInternal) (*PointsOperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearPayload not implemented")
}
func (UnimplementedPointsInternalServer) CreateFieldIndex(context.Context, *CreateFieldIndexCollectionInternal) (*PointsOperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFieldIndex not implemented")
}
func (UnimplementedPointsInternalServer) DeleteFieldIndex(context.Context, *DeleteFieldIndexCollectionInternal) (*PointsOperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFieldIndex not implemented")
}
func (UnimplementedPointsInternalServer) Search(context.Context, *SearchPointsInternal) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (UnimplementedPointsInternalServer) Scroll(context.Context, *ScrollPointsInternal) (*ScrollResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Scroll not implemented")
}
func (UnimplementedPointsInternalServer) Recommend(context.Context, *RecommendPointsInternal) (*RecommendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Recommend not implemented")
}
func (UnimplementedPointsInternalServer) Get(context.Context, *GetPointsInternal) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (UnimplementedPointsInternalServer) mustEmbedUnimplementedPointsInternalServer() {}

// UnsafePointsInternalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PointsInternalServer will
// result in compilation errors.
type UnsafePointsInternalServer interface {
	mustEmbedUnimplementedPointsInternalServer()
}

func RegisterPointsInternalServer(s grpc.ServiceRegistrar, srv PointsInternalServer) {
	s.RegisterService(&PointsInternal_ServiceDesc, srv)
}

func _PointsInternal_Upsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).Upsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/Upsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).Upsert(ctx, req.(*UpsertPointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).Delete(ctx, req.(*DeletePointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_SetPayload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPayloadPointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).SetPayload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/SetPayload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).SetPayload(ctx, req.(*SetPayloadPointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_DeletePayload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePayloadPointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).DeletePayload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/DeletePayload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).DeletePayload(ctx, req.(*DeletePayloadPointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_ClearPayload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearPayloadPointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).ClearPayload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/ClearPayload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).ClearPayload(ctx, req.(*ClearPayloadPointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_CreateFieldIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFieldIndexCollectionInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).CreateFieldIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/CreateFieldIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).CreateFieldIndex(ctx, req.(*CreateFieldIndexCollectionInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_DeleteFieldIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFieldIndexCollectionInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).DeleteFieldIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/DeleteFieldIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).DeleteFieldIndex(ctx, req.(*DeleteFieldIndexCollectionInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchPointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).Search(ctx, req.(*SearchPointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_Scroll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScrollPointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).Scroll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/Scroll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).Scroll(ctx, req.(*ScrollPointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_Recommend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecommendPointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).Recommend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/Recommend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).Recommend(ctx, req.(*RecommendPointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

func _PointsInternal_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPointsInternal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PointsInternalServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qdrant.PointsInternal/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PointsInternalServer).Get(ctx, req.(*GetPointsInternal))
	}
	return interceptor(ctx, in, info, handler)
}

// PointsInternal_ServiceDesc is the grpc.ServiceDesc for PointsInternal service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PointsInternal_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "qdrant.PointsInternal",
	HandlerType: (*PointsInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upsert",
			Handler:    _PointsInternal_Upsert_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PointsInternal_Delete_Handler,
		},
		{
			MethodName: "SetPayload",
			Handler:    _PointsInternal_SetPayload_Handler,
		},
		{
			MethodName: "DeletePayload",
			Handler:    _PointsInternal_DeletePayload_Handler,
		},
		{
			MethodName: "ClearPayload",
			Handler:    _PointsInternal_ClearPayload_Handler,
		},
		{
			MethodName: "CreateFieldIndex",
			Handler:    _PointsInternal_CreateFieldIndex_Handler,
		},
		{
			MethodName: "DeleteFieldIndex",
			Handler:    _PointsInternal_DeleteFieldIndex_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _PointsInternal_Search_Handler,
		},
		{
			MethodName: "Scroll",
			Handler:    _PointsInternal_Scroll_Handler,
		},
		{
			MethodName: "Recommend",
			Handler:    _PointsInternal_Recommend_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _PointsInternal_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "points_internal_service.proto",
}
